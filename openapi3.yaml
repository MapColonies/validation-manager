openapi: 3.0.1
info:
  title: validation-manager
  description: validation manager for 3d services
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

paths:
  /ingestion:
    post:
      operationId: ingestion
      tags:
        - ingestion
      summary: validates the metadata of new product for ingestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationResponse'
  /update/{identifier}:
    post:
      operationId: update
      tags:
        - update
      parameters:
        - $ref: '#/components/parameters/identifier'
      summary: validates the updated metadata of existing product for update
      requestBody:
        content:
          application/json:
            schema:
              $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/updatePayload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationResponse'
components:
  parameters:
    identifier:
      in: path
      name: identifier
      required: true
      schema:
        type: string
      description: Metadata record identifier
  schemas:
    validationResponse:
      type: object
      required:
        - isValidated
      properties:
        isValidated:
          type: boolean
        reason:
          type: string
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    payload:
      type: object
      description: 3d model payload
      required:
        - modelPath
        - tilesetFilename
        - metadata
      properties:
        modelPath:
          type: string
          description: Model files location path (from pv)
          example: /home/3DModels/NewYork
        tilesetFilename:
          type: string
          description: Model tileset filename
          example: tileset.json
        metadata:
          $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/basic-payload'
